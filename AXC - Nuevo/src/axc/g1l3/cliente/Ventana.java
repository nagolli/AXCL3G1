/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package axc.g1l3.cliente;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.InetAddress;
import javax.swing.SpinnerNumberModel;
import javax.swing.Timer;

/**
 *
 * @author Ignacio
 */
public class Ventana extends javax.swing.JFrame
{
    Cliente clientes;
    /**
     * Creates new form Ventana
     * @param ip
     * @param numCli
     */
    public Ventana(String ip,int numCli)
    {
        Ventana.numCli=numCli;
        System.out.println(numCli);
        initComponents();
        clientes=new Cliente(this,ip,numCli);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        BotonAnadir = new javax.swing.JButton();
        Spinner = new javax.swing.JSpinner(new SpinnerNumberModel(1,1,100,1));
        BotonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaInfo = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        SpinnerHilo = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        BotonAnadir.setText("Lanzar");
        BotonAnadir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BotonAnadirActionPerformed(evt);
            }
        });

        BotonSalir.setText("Salir");
        BotonSalir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BotonSalirActionPerformed(evt);
            }
        });

        textAreaInfo.setEditable(false);
        textAreaInfo.setColumns(40);
        textAreaInfo.setRows(50);
        jScrollPane1.setViewportView(textAreaInfo);

        jLabel1.setText("Posiciones");

        jLabel2.setText("Hilo Mostrado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BotonAnadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Spinner, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addComponent(BotonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SpinnerHilo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonAnadir)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(9, 9, 9)
                        .addComponent(SpinnerHilo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(BotonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonAnadirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BotonAnadirActionPerformed
    {//GEN-HEADEREND:event_BotonAnadirActionPerformed
        int aux=(Integer)Spinner.getValue();
        clientes.lanzar(aux);
    }//GEN-LAST:event_BotonAnadirActionPerformed

    private void BotonSalirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BotonSalirActionPerformed
    {//GEN-HEADEREND:event_BotonSalirActionPerformed
            System.exit(0);
    }//GEN-LAST:event_BotonSalirActionPerformed

    
    public void actualizarPosiciones(String info)
    {
        if(info.equals(""))
        {
            textAreaInfo.setText("Hilo no existente");
        }
        else
        {
        textAreaInfo.setText(info);
        }
    }
    
    Timer timer = new Timer (1000, new ActionListener () 
{ 
    public void actionPerformed(ActionEvent e) 
    { 
        actualizarPosiciones(clientes.getInfo((Integer)SpinnerHilo.getValue()));
     } 
}); 
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAnadir;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JSpinner Spinner;
    private javax.swing.JSpinner SpinnerHilo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaInfo;
    // End of variables declaration//GEN-END:variables
    static private String ip;
    static private int numCli;
    
    void QuitarTexto()
    {
        textAreaInfo.setText("");
    }

    void AnadirTexto(String mensaje)
    {
        textAreaInfo.setText(textAreaInfo.getText()+mensaje);
    }
}
